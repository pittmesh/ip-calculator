#!/bin/bash
#
# Script written for PittMesh by Jason Khanlar
#

# Check for --listall, otherwise proceed

if [ "$*" = "--listall" ]; then
  mac1=DC
  mac2=9F
  mac3=DB
  mac4=00
  mac5=00
  mac6=00

  ip1=100
  ip2=64
  ip3=0
  ip4=0

  for ip2 in `seq 0 255`;do
    #((ip2s63=ip2-63))
    #((ip2=ip2-63))

    mac4=`echo "obase=16; $ip2" | bc`

    ((ip2=(ip2+64)%64 + 64))

#    # Adjust ip 2nd octet to cycle through 64-127 four times
#    if [ $ip2 -ge 256 ]; then
#      ((ip2-=192))
#    elif [ $ip2 -ge 192 ]; then
#      ((ip2-=128))
#    elif [ $ip2 -ge 128 ]; then
#      ((ip2-=64))
#    fi
#    ip2=$((ip2 % 64 + 63))

    # Pad with 0
    if [ ${#mac4} -eq 1 ]; then mac4=0$mac4; fi

#    for ip3 in `seq 255`;do
#      mac5=`echo "obase=16; $ip3" | bc`

#      # Pad with 0
#      if [ ${#mac5} -eq 1 ]; then mac5=0$mac5; fi

#      for ip4 in `seq 255`;do
#        mac6=`echo "obase=16; $ip4" | bc`

#        # Pad with 0
#        if [ ${#mac6} -eq 1 ]; then mac6=0$mac6; fi

        # Format IP address
        ip="$ip1.$ip2.$ip3.$ip4"

        # Format MAC address
        mac="$mac1:$mac2:$mac3:$mac4:$mac5:$mac6"

        # Pad with space
        space=`printf '%*s' "$((15 - ${#ip}))"`

        # Output matching IP address and MAC address
        echo "$ip $space=> $mac"
#      done
#    done
  done
  exit
fi

# Proceed if not --listall

# Get # of arguments passed to this script
args=$#

# # of arguments should be 1 or 6
# 1 -> DC:9F:DB:CE:13:57 -or- DC-9F-DB-CE-13-57
# 6 -> DC 9F DB CE 13 57

if [ $args -eq 1 ]; then
  # Split 1 argument into 6 separate arguments, 1 for each octet
  # and pass the 6 arguments to a new instance of this script
  $0 `echo $1 | tr ":-" " "`
  # After the new instance completes, make sure to end this one
  exit
elif [ $args -eq 6 ]; then
  mac1=`echo $1|tr [a-z] [A-Z]`
  mac2=`echo $2|tr [a-z] [A-Z]`
  mac3=`echo $3|tr [a-z] [A-Z]`
  mac4=`echo $4|tr [a-z] [A-Z]`
  mac5=`echo $5|tr [a-z] [A-Z]`
  mac6=`echo $6|tr [a-z] [A-Z]`
else
  echo "Usage: $0 <MAC address>"
  echo "Usage: $0 --listall"
  echo
  echo "examples:"
  echo "  $0 DC:9F:DB:CE:13:57"
  echo "  $0 DC-9F-DB-CE-13-57"
  echo "  $0 DC 9F DB CE 13 57"
  echo "  $0 dc 9f db ce 13 57"

  exit
fi

# Ensure that we are working with the correct large MAC address block
# DC-9F-DB

if [ ! $mac1 = "DC" -o ! $mac2 = "9F" -o ! $mac3 = "DB" ]; then
  echo "Invalid MAC address. Make sure it begins with DC:9F:DB"
  exit
fi

# Convert last three hexadecimal octets to decimal values
ip1=100
ip2=`echo "ibase=16; $mac4" | bc`
ip3=`echo "ibase=16; $mac5" | bc`
ip4=`echo "ibase=16; $mac6" | bc`

# nmap -sL -n 100.64.0.0/10
# DC:9F:DB:01:01:01 - DC:9F:DB:FF:FF:FF
# 100.64.0.0        - 100.127.255.255

((ip2+=63))

echo "$ip1.$ip2.$ip3.$ip4"
#printf "%x\n" $oct4|tr [a-z] [A-Z]
